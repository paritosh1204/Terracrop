import React from "react";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Filter } from "lucide-react";
import { Card, CardContent } from "@/components/ui/card";

export default function LandFilters({ filters, setFilters }) {
  const states = [
    "Maharashtra", "Karnataka", "Punjab", "Uttar Pradesh", "Gujarat", 
    "Rajasthan", "Madhya Pradesh", "Tamil Nadu", "Andhra Pradesh", "Haryana"
  ];

  const soilTypes = [
    { value: "black_soil", label: "Black Soil" },
    { value: "red_soil", label: "Red Soil" },
    { value: "alluvial", label: "Alluvial" },
    { value: "sandy", label: "Sandy" },
    { value: "clayey", label: "Clayey" }
  ];

  const priceRanges = [
    { value: "0-50000", label: "₹0 - ₹50,000" },
    { value: "50000-100000", label: "₹50,000 - ₹1,00,000" },
    { value: "100000-200000", label: "₹1,00,000 - ₹2,00,000" },
    { value: "200000-500000", label: "₹2,00,000 - ₹5,00,000" },
    { value: "500000", label: "Above ₹5,00,000" }
  ];

  const sizeRanges = [
    { value: "0-5", label: "0 - 5 acres" },
    { value: "5-10", label: "5 - 10 acres" },
    { value: "10-25", label: "10 - 25 acres" },
    { value: "25-50", label: "25 - 50 acres" },
    { value: "50", label: "Above 50 acres" }
  ];

  const updateFilter = (key, value) => {
    setFilters(prev => ({ ...prev, [key]: value }));
  };

  return (
    <Card className="bg-white/80 backdrop-blur-sm border-emerald-100 shadow-lg">
      <CardContent className="p-6">
        <div className="flex items-center gap-2 mb-4">
          <Filter className="w-5 h-5 text-emerald-600" />
          <h3 className="font-semibold text-gray-900">Filter Results</h3>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">State</label>
            <Select value={filters.state} onValueChange={(value) => updateFilter("state", value)}>
              <SelectTrigger className="bg-white border-emerald-200 focus:border-emerald-400">
                <SelectValue placeholder="All States" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">All States</SelectItem>
                {states.map(state => (
                  <SelectItem key={state} value={state}>{state}</SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">Soil Type</label>
            <Select value={filters.soilType} onValueChange={(value) => updateFilter("soilType", value)}>
              <SelectTrigger className="bg-white border-emerald-200 focus:border-emerald-400">
                <SelectValue placeholder="All Soil Types" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">All Soil Types</SelectItem>
                {soilTypes.map(soil => (
                  <SelectItem key={soil.value} value={soil.value}>{soil.label}</SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">Price Range (per acre)</label>
            <Select value={filters.priceRange} onValueChange={(value) => updateFilter("priceRange", value)}>
              <SelectTrigger className="bg-white border-emerald-200 focus:border-emerald-400">
                <SelectValue placeholder="All Prices" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">All Prices</SelectItem>
                {priceRanges.map(range => (
                  <SelectItem key={range.value} value={range.value}>{range.label}</SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">Land Size</label>
            <Select value={filters.sizeRange} onValueChange={(value) => updateFilter("sizeRange", value)}>
              <SelectTrigger className="bg-white border-emerald-200 focus:border-emerald-400">
                <SelectValue placeholder="All Sizes" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">All Sizes</SelectItem>
                {sizeRanges.map(size => (
                  <SelectItem key={size.value} value={size.value}>{size.label}</SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}